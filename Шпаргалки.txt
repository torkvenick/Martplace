1. Для манипуляций с флексами, блок должен иметь ширину и высоту, чтобы контент внутри мог 
разбрасываться как по вертикали, так и по горизонтали!


Ремарки (Артём):

Псевдоэлементы  1. При нажатии на поле для текста должен менятся фокус, чтобы было видно, что мы взаимодействуем с элементом.

                2. На кнопках ставить курсор поинтер.

Шапка    +      3. Скруглять нумерацию в шапке лучше не 50%, а, например, 20px - тогда будет выглядеть более красиво.

Benefits        4. При наведении в блоке benefits появляется тень, и никак иначе. 

Swiper          5. Прокрутка в слайдере (стрелочки) - это фактически половина блока, а не конкретно стрелочка.

                11. Даже если у кнопок есть контейнер, то использовать его для позиционирования. А ЕЩЕ каждую кнопку сделать с соответствующим фоном и скругленной половиной.

Карточка товара 6. Края слайда должны быть скруглены по задумке дизайнера.

Общее           7. Обратить внимание на скругления рамок, где нужно и где нет!!!

                8. Цена - это просто цена, не кнопка и не ссылка.

                9. Микситап выровнять, чтобы блоки не выглядели страшно. Space-between заменить.

Filter-choice   10. При открытии фильтров элемент заходит за блок с продуктом. Посмотреть контекст наложения!!!

Feedback        12. Блок с отзывами на самом деле слайдер! Найти скрытые стрелочки.

-------------КРАШ-ТЕСТ---------------- 

general           17. line-clamp (sass mixin/ scss mixin) и text-overflow ПОЧИТАТЬ как с ними работать.

                  19. Текст можно ограничить несколькими строчками, после чего идет троеточие.

      form        25. Загуглить класс sr-only/ Его вставили в span между label для формы. 
                  <label for="formSearch">
                    <span class="sr-only">Search</span>
                  </label>

                  27. Модификатор используется исключительно для модифицируемого элемента, а не другому. Если нужно что-то изменить внутри блока, то можем исопльзовать вспомогательный класс (class-helper). Пример: 
                    <div class="intro__title">
                      Create Your Own
                      <span class="intro__title--bold, а должно быть text-bold, например ">Digital Product Marketplace</span>
                    </div>

                  28. Если в блоке есть несколько повторяюшихся элементов, то лучше писать не intro__btn, a intro__btns. В моем случае можно и intro__links, но это не критично.

                  29. Общие названия не использовать (вроде block)

                  30. Нельзя использовать два элемента одного блока. Пример:
                    <div class="block__item block__item-title product__title"> - плохо
                    <div class="block__item product__title"> - приемлемо

                  33. В product-item контентные изображения не есть ссылками, так как при ховере там появляются ссылки. Плюс их ставим через img, а не бэкграунд.
                  
                  34. Не нужно усложнять классы, испольщуя названия родителей. Пример:
                  product-item__top-hover - плохо product-item__hover - допустимо
                  product-item__top-btn - плохо product-item__btn - допустимо

                  40. Переименовать класс block в section хотя бы.

                  41. ВАЖНО!!!! - однотипные элементы оформлять как список.

                  42. <div class="filter-choice"> - у меня отдельный блок. Зачем? Это же часть сущности <div class="products__filter">

                  -------------ВАЖНО - ОДНОТИПНЫЕ ЭЛЕМЕНТЫ МОГУТ БЫТЬ В СПИСКЕ!!!-----------

img               14. Проверить все изображения на возможность замены + иконки в подвале - контентные.

                  18. Картинкам можно object-fit и ширину с высотой, чтобы они не ломались.

header            16. Ограничить ширину блока с именем и ценой в шапке.

Logo         +    13. Логотип при смене картинки разлезается.

             +    22. ЛОГОТИП - это всё одна картинка. 

social icons      15. Иконка в подвале - это может быть кружочек с SVG иконкой.

product-item      20. Тэги в карточке товара тоже поправить, чтобы не ломались при двух рядах.

avatar (feedback) 21. В блоке с отзывами если заголовок увеличить - ломается аватарка.

       (block)    23. user-profile - это всё может быть целой ссылкой или же кнопкой (посмотреть), потому что дальше есть выпадашки всякие. Тогда внутри не нужно делать отдельные ссылки.  

                  24. Я сделал отдельные блоки внутри user-profile. Не нужно было, так как все они ( user-info, user-name, user-wallet) часть этого блока и без него никуда не уйдут. Можно переименовать класс на user и добавлять элементы, так как этот блок используется и дальше.

form              26. В форме лучше кнопку инпутом не делать, а вот так:
                      <button class="form__btn product-search__btn" type="submit">Submit</button>

swiper            31. Нельзя писать swiper-btn__wrapper, если нет блока swiper-btn!

                  32. В навигации SWIPER можно поменять div на button: 
                    <!-- If we need navigation buttons -->
                      <div class="swiper-button-prev"></div>
                      <div class="swiper-button-next"></div>
                    </div>

                  44. Стрелкам в свайпере можно сделать одинаковый класс, разве что другой стрелке задать модификатор для разворота ее на 180.

Карточка (wide)   35. Вместо модификатора иннеру карточки, заголовку и остальным элементам лучше примиксовать класс. В данном случае (так как блок product) product__card, 
                      например, и product__card-title 
                        <div class="product-item__inner product-item__inner--wide">
                          <a class="product-item__title product-item__title--big" href="#">
                           One Page Resume Template
                          </a>

                  36. Иконки возле категории (Wordpress, html и т.д.) в принципе не важны для пользователя. Alt можем не прописывать, а их оставить на img, либо на background.

                  37. Попробовать модифицировать кнопки категорий btn-cat?

                  38. Сердечки и корзина - это кнопки, а не ссылки, при нажатии на которых, товар добавляется либо в "favourite" либо в корзину. ПЕРЕДЕЛАТЬ!

                  39. Рейтинг сделать рейтингом. 

---------ВСЕ ПОПРАВИТЬ ВСЕМ КАРТОЧКАМ!!!!!-------------

products-feed     43. Блок products-feed: на контейнер мы ничего не навешиваем, тем более непонятный модификатор.

stats             45. Блок stats: элементы внутри можно сделать списком, так как они однотипные. block__inner будет ul, а не div, а дальше li.

benefits-2        46. Второй блок benefits: цифры зря вынес как span, так как есть css счётчики (css counters). Сами ставят цифру и не надо будет вводить ее вручную. ПЕРЕИМЕНОВАТЬ!

offers            47. Блок offers: картинки выносим инлайново, через style, не просто в модификатор прячем.

                  48. Блок offers: присутствует block__inner, хотя самого блока block там нет.

feedback          49. Блок feedback: под заголовком есть текст, который можно назвать не block__title-bottom, а, например, block__subtitle.

                  50. Блок feedback: переиспользовать блок user, который у меня в шапке.

                  51. Блок feedback: переделать его в слайдер.

latest            52. Блок latest: для span в заголовке можно использовать вспомогающий класс, чтобы изменить цвет буквы. (text-blue, например)

info              53. Блок info: боковую линию можно сделать через псевдоэлемент и не нужно добавлять модификатор. Можно использовать nth-child или first-child.

                  54. Блок info: повыносить картинки на бэк инлайново, использовать вспомогательный класс.

join              55. Блок join: поубирать сложные классы.

footer            56. Блок footer: <div class="footer__item footer__contacts"> - неправильно. Не может один обьект быть дважды элементом. Можно сделать модификатор footer__item--contacts.

                  58. Блок footer: <ul class="footer-list footer-list__contacts"> - это очень неправильно, потому что это и блок и элемент сразу. АБСУРД. 

                  60. Блок footer: для padding модификатор не создается. Тем более, что он одиаковый у всех.

                  61. Блок footer: label, кнопка вместо input, сложные классы, двойной элемент.

                  62. Блок footer: соц.сети вставить картинкой, убрать модификаторы. 

      (contacts)  59. Блок contacts переделать: это не список, там его не должно быть.


 ------------------STYLE------------------

 general          63. Блок открывается один раз! Раз открылся - пишем всё там. header__bottom выносить за пределы открытого header нельзя.

                  69. line-height можно прописать в body, но сначала определить какой он должен быть. И ставить КОЭФФИЦИЕНТ, а не пиксели, иначе будет плохо. В нашем случае 1.6 подойдет. Дизайнеры не особо запариваются типографикой. 

                  ВАЖНО - везде лучше использовать коэффициент для line-height.

                  71. Outline убирается непосредственно у элемента, а в focus он стилизуется.

                  72. Проверить какой размер шрифта самый популярный и расставить его.

                  73. TTF не так уж и важен в современной разработке. Пусть висит, но его можно в дальнейшем не использовать. 

                  74. Для шрифта linearicons можно оставтиь лишь woff, woff2.

                  75. Нельзя просто так прописывать элементы отдельно от блоков. Если открыт блок product, то в нем должен быть &__title, а не фиг знает где.

                  76. Обычно, сначала стилизуется focus, а потом hover, чтобы работало нормально. 

                  77. Не привязываться к классам swiper, создать свой и с ним играться.

                  78. Элемент должен быть в блоке, а модификатор, псевдоклассы и разные состояния - в элементе.

                  80. Посмотреть подкод БЭМ, компонентый список. Как организовывают разметку и стили.

                  81. SCSS: в этой папке создаем папку components и pages. B pages будут:
                      folder pages --> folder home (элементы страницы home) + _home.scss (в нем пишем импорт с папки home) и так далее с каждой страницей.
                  В папке components будут те блоки, которые мы используем часто (шапка, подвал)

                  82. В файле style.scss будут исключительно импорты @import. В components мы сохраняем файлы вот так: _header.scss 

                  83. Импорт прописываем вот так: @import 'components/header';

                  85. АДАПТИВ: прописываем там, где нужно, а не выводим отдельным файлом.

          (body)  68. Body: сбросить margin (margin: 0;) и добавить шрифту семейство (font-family: 'Quicksand', sans-serif;)
          
      (container) 70. container: ширину задать можно и пикселем, а не процентами. Max-width: 1170px; padding: 0 15px;
          
          (list)  67. Ul и li: лучше всем в global не прописывать list-style: none. Можно сделать так:
                    ul[class], ol[class] {
                      list-style: none;
                    }

          (links) 64. Ссылкам inline-block мы не прописываем. -------ГОТОВО

                  65. Cursor: pointer у всех ссылок по умолчанию есть. -------ГОТОВО

                  66. Цвет в global можно прописать inherit, а не задавать какой-то цвет. -------ГОТОВО

      +   (logo)  84. Логотип logo можно вынести в global. User-profile тоже в global после того, как переделаю.

          (menu)  85. Menu можно запихнуть в header.

          (lnr)   79. Разобраться с lnr: если прописал ему стили - меняется всё. 




